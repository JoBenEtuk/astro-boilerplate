---
import '@styles/main.scss';

interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="Astro description" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>

        <!-- <link
			rel="preload"
			href="/fonts/IBMPlexMono-Regular.woff2"
			as="font"
			type="font/woff2"
			crossorigin
		/> -->
    </head>
    <body>
        <div class="u-container">
            <nav class="u-flex u-gap-gutter u-py-fluid-s">
                <a href="/">Index</a>
                <a href="/about">About</a>
            </nav>
        </div>

        <main role="main" id="swup" class="transition-fade">
            <div id="content">
                <slot />
            </div>
        </main>

        <footer class="u-container u-flex u-justify-between u-py-fluid-xs">
            <div>
                &copy;{new Date().getFullYear()}
            </div>

            <nav class="u-flex u-gap-gutter">
                <a href="/">Index</a>
                <a href="/about">About</a>
            </nav>
        </footer>
    </body>
</html>

<script src="../scripts/app.ts"></script>
<script>
    import { setViewportSize } from '@scripts/utils/setViewportSize';
    import { debounce } from 'ts-debounce';
    import { CUSTOM_EVENTS } from '@scripts/config';

    // Set viewport size
    setViewportSize();

    // Debounce resize event
    const resizeEndEvent = new CustomEvent(CUSTOM_EVENTS.RESIZE_END);
    const debouncedFunction: any = () => {
        setViewportSize();
        window.dispatchEvent(resizeEndEvent);
    };

    window.addEventListener('resize', debounce(debouncedFunction, 200));
</script>
